-- Pi types
id : (A : Type) -> A -> A
id A a = a

-- Universes
-- Type and Type0 are synonyms
universes : (f : Type1 -> Type0) -> f Type0 -> f Type0
universes f = id (f Type0)

-- Universes are cumulative
cumlative : Type3 -> Type8
cumlative A = A

-- Lambdas
compose : (A B C : Type) -> (B -> C) -> (A -> B) -> A -> C
compose A B C = \g f a -> g (f a)

-- Pattern matching
plus : Nat -> Nat -> Nat
plus (zero t) y = y
plus (suc x) y = suc (plus x y)

mul : Nat -> Nat -> Nat
mul (zero t) y = zero t
mul (suc x) y = plus y (mul x y)

fac : Nat -> Nat
fac (zero t) = suc (zero t)
fac (suc x) = mul (suc x) (fac x)

one = suc (zero t)
two = plus one one
four = plus two two
eight = plus four four
